type: edu
files:
- name: src/cinema/Main.java
  visible: true
  text: |
    package cinema;

    import org.springframework.boot.SpringApplication;
    import org.springframework.boot.autoconfigure.SpringBootApplication;

    @SpringBootApplication
    public class Main {
        public static void main(String[] args) {
            SpringApplication.run(Main.class, args);
        }
    }
  learner_created: false
- name: build.gradle
  visible: true
  text: |-
    plugins {
        id 'java'
        id 'org.springframework.boot' version '2.3.1.RELEASE'
        id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    }

    sourceCompatibility = 11

    repositories {
        mavenCentral()
    }

    sourceSets.main.resources.srcDirs = ["src/resources"]

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
  learner_created: false
- name: src/resources/application.properties
  visible: true
  text: |-
    server.port=28852
    management.endpoints.web.exposure.include=*
    management.endpoint.shutdown.enabled=true
  learner_created: false
- name: test/CinemaTests.java
  visible: false
  text: |-
    import cinema.Main;
    import com.google.gson.Gson;
    import org.hyperskill.hstest.dynamic.DynamicTest;
    import org.hyperskill.hstest.dynamic.input.DynamicTesting;
    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;
    import org.hyperskill.hstest.mocks.web.response.HttpResponse;
    import org.hyperskill.hstest.stage.SpringTest;
    import org.hyperskill.hstest.testcase.CheckResult;

    import java.util.Map;

    import static org.hyperskill.hstest.testing.expect.Expectation.expect;
    import static org.hyperskill.hstest.testing.expect.json.JsonChecker.*;

    public class CinemaTests extends SpringTest {

        private static final String ALREADY_PURCHASED_ERROR_MESSAGE = "The ticket has been already purchased!";
        private static final String OUT_OF_BOUNDS_ERROR_MESSAGE = "The number of a row or a column is out of bounds!";

        private static final Gson gson = new Gson();

        public CinemaTests() {
            super(Main.class);
        }

        private static void checkStatusCode(HttpResponse resp, int status) {
            if (resp.getStatusCode() != status) {
                throw new WrongAnswer(
                    resp.getRequest().getMethod() + " " +
                        resp.getRequest().getLocalUri() +
                        " should respond with status code " + status + ", " +
                        "responded: " + resp.getStatusCode() + "\n\n" +
                        "Response body:\n\n" + resp.getContent()
                );
            }
        }

        CheckResult testEndpoint() {
            HttpResponse response = get("/seats").send();
            checkStatusCode(response, 200);
            return CheckResult.correct();
        }

        CheckResult testEndpointAvailableSeats() {
            HttpResponse response = get("/seats").send();
            expect(response.getContent()).asJson().check(
                isObject()
                    .value("available_seats",
                        isArray(
                            81,
                            isObject()
                                .value("row", isInteger(i -> i >= 1 && i <= 9))
                                .value("column", isInteger(i -> i >= 1 && i <= 9))
                                .value("price", isInteger(price -> price == 10 || price == 8))
                        )
                    )
                    .value("total_columns", 9)
                    .value("total_rows", 9)
            );
            return CheckResult.correct();
        }

        CheckResult testPurchaseTicket() {
            HttpResponse response = post(
                "/purchase",
                gson.toJson(Map.of(
                    "row", "1",
                    "column", "1"
                ))
            ).send();

            checkStatusCode(response, 200);

            expect(response.getContent()).asJson()
                .check(
                    isObject()
                        .value("row", 1)
                        .value("column", 1)
                        .value("price", 10)
                );
            return CheckResult.correct();
        }

        CheckResult testErrorMessageThatTicketHasBeenPurchased() {
            HttpResponse response = post(
                "/purchase",
                gson.toJson(Map.of(
                    "row", "1",
                    "column", "1"
                ))
            ).send();

            checkStatusCode(response, 400);

            expect(response.getContent()).asJson()
                .check(
                    isObject()
                        .value("error", ALREADY_PURCHASED_ERROR_MESSAGE)
                );
            return CheckResult.correct();
        }

        CheckResult testErrorMessageThatNumbersOutOfBounds() {
            HttpResponse response = post(
                "/purchase",
                gson.toJson(Map.of(
                    "row", "10",
                    "column", "1"
                ))
            ).send();

            checkStatusCode(response, 400);

            expect(response.getContent()).asJson()
                .check(
                    isObject()
                        .value("error", OUT_OF_BOUNDS_ERROR_MESSAGE)
                );

            response = post(
                "/purchase",
                gson.toJson(Map.of(
                    "row", "1",
                    "column", "10"
                ))
            ).send();

            checkStatusCode(response, 400);

            expect(response.getContent()).asJson()
                .check(
                    isObject()
                        .value("error", OUT_OF_BOUNDS_ERROR_MESSAGE)
                );

            response = post(
                "/purchase",
                gson.toJson(Map.of(
                    "row", "-1",
                    "column", "-1"
                ))
            ).send();

            checkStatusCode(response, 400);

            expect(response.getContent()).asJson()
                .check(
                    isObject()
                        .value("error", OUT_OF_BOUNDS_ERROR_MESSAGE)
                );


            return CheckResult.correct();
        }

        @DynamicTest
        DynamicTesting[] dynamicTests = new DynamicTesting[]{
            this::testEndpoint,
            this::testEndpointAvailableSeats,
            this::testPurchaseTicket,
            this::testErrorMessageThatTicketHasBeenPurchased,
            this::testErrorMessageThatNumbersOutOfBounds
        };
    }
  learner_created: false
- name: src/cinema/model/Room.java
  visible: true
  text: |
    package cinema.model;


    import com.fasterxml.jackson.annotation.*;
    import java.util.*;

    public class Room {
        private final int rows = 9;
        private final int columns = 9;
        private Seat[][] seats;

        public Room() {
            seats = new Seat[rows][columns];
            for (int i = 0; i < rows; i++) {
                for (int j = 0; j < columns; j++) {
                    seats[i][j] = Seat.EMPTY;
                }
            }
        }

        @JsonGetter(value = "total_rows")
        public int getRows() {
            return rows;
        }

        @JsonGetter(value = "total_columns")
        public int getColumns() {
            return rows;
        }

        @JsonGetter(value = "available_seats")
        public List<Map<String, Integer>> getAvailableSeats() {
            List<Map<String, Integer>> availableSeats = new LinkedList<>();
            for (int i = 0; i < rows; i++) {
                for (int j = 0; j < columns; j++) {
                    if (seats[i][j] == Seat.EMPTY) {
                        availableSeats.add(Map.of("row", i + 1, "column", j + 1));
                    }
                }
            }
            return availableSeats;
        }
    }
  learner_created: true
- name: src/resources/static/index.html
  visible: true
  text: |-
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Main</title>
    </head>
    <body>
    <h1>Welcome!</h1>
    </body>
    </html>
  learner_created: true
- name: src/cinema/model/Seat.java
  visible: true
  learner_created: true
- name: src/cinema/controller/RoomController.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/189/stages/946/implement#comment
status: Failed
feedback:
  message: "Exception in test #1\n\nCannot start Spring application\n\norg.springframework.beans.factory.BeanCreationException:\
    \ Error creating bean with name &#39;requestMappingHandlerMapping&#39; defined\
    \ in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]:\
    \ Invocation of init method failed; nested exception is java.lang.IllegalStateException:\
    \ Ambiguous mapping. Cannot map &#39;cinemaController&#39; method \ncinema.controller.CinemaController#getRoomInformation()\n\
    to {GET /seats}: There is already &#39;seatController&#39; bean method\ncinema.api.SeatController#getRoom()\
    \ mapped.\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)\r\
    \n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)\r\
    \n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\
    \n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\
    \n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\
    \n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\
    \n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\
    \n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\
    \n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\
    \n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\
    \n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)\r\
    \n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)\r\
    \n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)\r\
    \n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\
    \n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\
    \n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)\r\
    \n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)\r\
    \n\tat cinema.Main.main(Main.java:9)\n\nPlease find below the output of your program\
    \ during this failed test.\n\n---\n\n\n  .   ____          _            __ _ _\n\
    \ /\\\\ / ___&#39;_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | &#39;_ | &#39;_|\
    \ | &#39;_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n\
    \  &#39;  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n\
    \ :: Spring Boot ::        (v2.3.1.RELEASE)\n\n2021-08-01 17:23:13.598  INFO 12108\
    \ --- [    Test worker] cinema.Main                              : Starting Main\
    \ on LAPTOP-J1J60HSA with PID 12108 (started by tyyag in C:\\Users\\tyyag\\Documents\\\
    GitHub\\LearningJava\\Courses\\Hyperskill\\Java Developer\\Hard\\Cinema-Room-REST-Service\\\
    Cinema Room REST Service\\task)\n2021-08-01 17:23:13.604  INFO 12108 --- [   \
    \ Test worker] cinema.Main                              : No active profile set,\
    \ falling back to default profiles: default\n2021-08-01 17:23:17.128  INFO 12108\
    \ --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized\
    \ with port(s): 28852 (http)\n2021-08-01 17:23:17.172  INFO 12108 --- [    Test\
    \ worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n\
    2021-08-01 17:23:17.173  INFO 12108 --- [    Test worker] org.apache.catalina.core.StandardEngine\
    \  : Starting Servlet engine: [Apache Tomcat/9.0.36]\n2021-08-01 17:23:17.514\
    \  INFO 12108 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       :\
    \ Initializing Spring embedded WebApplicationContext\n2021-08-01 17:23:17.515\
    \  INFO 12108 --- [    Test worker] w.s.c.ServletWebServerApplicationContext :\
    \ Root WebApplicationContext: initialization completed in 3768 ms\n2021-08-01\
    \ 17:23:18.196  INFO 12108 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor\
    \  : Initializing ExecutorService &#39;applicationTaskExecutor&#39;\n2021-08-01\
    \ 17:23:18.420  WARN 12108 --- [    Test worker] ConfigServletWebServerApplicationContext\
    \ : Exception encountered during context initialization - cancelling refresh attempt:\
    \ org.springframework.beans.factory.BeanCreationException: Error creating bean\
    \ with name &#39;requestMappingHandlerMapping&#39; defined in class path resource\
    \ [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]:\
    \ Invocation of init method failed; nested exception is java.lang.IllegalStateException:\
    \ Ambiguous mapping. Cannot map &#39;cinemaController&#39; method \ncinema.controller.CinemaController#getRoomInformation()\n\
    to {GET /seats}: There is already &#39;seatController&#39; bean method\ncinema.api.SeatController#getRoom()\
    \ mapped.\n2021-08-01 17:23:18.422  INFO 12108 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor\
    \  : Shutting down ExecutorService &#39;applicationTaskExecutor&#39;\n2021-08-01\
    \ 17:23:18.429  INFO 12108 --- [    Test worker] o.apache.catalina.core.StandardService\
    \   : Stopping service [Tomcat]\n2021-08-01 17:23:18.570  INFO 12108 --- [   \
    \ Test worker] ConditionEvaluationReportLoggingListener : \n\nError starting ApplicationContext.\
    \ To display the conditions report re-run your application with &#39;debug&#39;\
    \ enabled.\n2021-08-01 17:23:18.717 ERROR 12108 --- [    Test worker] o.s.boot.SpringApplication\
    \               : Application run failed\n\norg.springframework.beans.factory.BeanCreationException:\
    \ Error creating bean with name &#39;requestMappingHandlerMapping&#39; defined\
    \ in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]:\
    \ Invocation of init method failed; nested exception is java.lang.IllegalStateException:\
    \ Ambiguous mapping. Cannot map &#39;cinemaController&#39; method \ncinema.controller.CinemaController#getRoomInformation()\n\
    to {GET /seats}: There is already &#39;seatController&#39; bean method\ncinema.api.SeatController#getRoom()\
    \ mapped.\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)\
    \ ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)\
    \ ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\
    \ ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\
    \ ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\
    \ ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\
    \ ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\
    \ ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\
    \ ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\
    \ ~[spring-context-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\
    \ ~[spring-context-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)\
    \ ~[spring-boot-2.3.1.RELEASE.jar:2.3.1.RELEASE]\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)\
    \ ~[spring-boot-2.3.1.RELEASE.jar:2.3.1.RELEASE]\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)\
    \ ~[spring-boot-2.3.1.RELEASE.jar:2.3.1.RELEASE]\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\
    \ ~[spring-boot-2.3.1.RELEASE.jar:2.3.1.RELEASE]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\
    \ ~[spring-boot-2.3.1.RELEASE.jar:2.3.1.RELEASE]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)\
    \ ~[spring-boot-2.3.1.RELEASE.jar:2.3.1.RELEASE]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)\
    \ ~[spring-boot-2.3.1.RELEASE.jar:2.3.1.RELEASE]\n\tat cinema.Main.main(Main.java:9)\
    \ ~[main/:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method) ~[na:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\
    \ ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\
    \ ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\n\
    \tat org.hyperskill.hstest.stage.SpringTest.startSpring(SpringTest.java:141) ~[hs-test-release-SNAPSHOT.jar:na]\n\
    \tat org.hyperskill.hstest.stage.SpringTest.launchSpring(SpringTest.java:50) ~[hs-test-release-SNAPSHOT.jar:na]\n\
    \tat org.hyperskill.hstest.testing.runner.SpringApplicationRunner.launchSpringBootApplication(SpringApplicationRunner.java:20)\
    \ ~[hs-test-release-SNAPSHOT.jar:na]\n\tat org.hyperskill.hstest.testing.runner.SpringApplicationRunner.setUp(SpringApplicationRunner.java:35)\
    \ ~[hs-test-release-SNAPSHOT.jar:na]\n\tat org.hyperskill.hstest.testing.TestRun.setUp(TestRun.java:70)\
    \ ~[hs-test-release-SNAPSHOT.jar:na]\n\tat org.hyperskill.hstest.stage.StageTest.start(StageTest.java:111)\
    \ ~[hs-test-release-SNAPSHOT.jar:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method) ~[na:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\
    \ ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\
    \ ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\n\
    \tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\
    \ ~[junit-4.13.jar:4.13]\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)\
    \ ~[na:na]\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)\
    \ ~[na:na]\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)\
    \ ~[na:na]\n\tat org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)\
    \ ~[na:na]\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)\
    \ ~[na:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method) ~[na:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\
    \ ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\
    \ ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\n\
    \tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\
    \ ~[na:na]\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\
    \ ~[na:na]\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\
    \ ~[na:na]\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\
    \ ~[na:na]\n\tat com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[na:na]\n\
    \tat org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)\
    \ ~[na:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method) ~[na:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\
    \ ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\
    \ ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\n\
    \tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\
    \ ~[na:na]\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\
    \ ~[na:na]\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\
    \ ~[na:na]\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\
    \ ~[na:na]\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\
    \ ~[na:na]\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\
    \ ~[na:na]\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\
    \ ~[na:na]\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\
    \ ~[na:na]\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\
    \ ~[na:na]\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\
    \ ~[na:na]\n\tat java.base/java.lang.Thread.run(Thread.java:829) ~[na:na]\nCaused\
    \ by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map &#39;cinemaController&#39;\
    \ method \ncinema.controller.CinemaController#getRoomInformation()\nto {GET /seats}:\
    \ There is already &#39;seatController&#39; bean method\ncinema.api.SeatController#getRoom()\
    \ mapped.\n\tat org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:636)\
    \ ~[spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:603)\
    \ ~[spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:318)\
    \ ~[spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:378)\
    \ ~[spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:75)\
    \ ~[spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:288)\
    \ ~[spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\
    \ ~[na:na]\n\tat org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:286)\
    \ ~[spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:258)\
    \ ~[spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:217)\
    \ ~[spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:205)\
    \ ~[spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:189)\
    \ ~[spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$invokeInitMethods$5(AbstractAutowireCapableBeanFactory.java:1846)\
    \ ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat java.base/java.security.AccessController.doPrivileged(Native\
    \ Method) ~[na:na]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)\
    \ ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)\
    \ ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE]\n\t... 78 common frames omitted"
  time: Sun, 01 Aug 2021 20:23:21 UTC
record: -1
